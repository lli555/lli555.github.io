<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UMDCTF2024 on </title>
    <link>http://localhost:1313/tags/umdctf2024/</link>
    <description>Recent content in UMDCTF2024 on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/umdctf2024/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UMDCTF 2024 - Donations Part1</title>
      <link>http://localhost:1313/posts/umdctf2024/d1/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/umdctf2024/d1/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;This challenge has a parameter pollution vulnerability. In order to solve the challenge, I used &lt;code&gt;Burp Suite&lt;/code&gt; to intercept the web request and started from there.&lt;/p&gt;&#xA;&lt;h2 id=&#34;approach&#34;&gt;Approach&lt;/h2&gt;&#xA;&lt;p&gt;I first noticed that there is a login and a register page, so I made a new user and logged in as that user.&lt;/p&gt;&#xA;&lt;p&gt;The message on the web page tells us that it wants us to get the most donations, but it seems like only Jeff Bezos is the only one you can donate to.&lt;/p&gt;</description>
    </item>
    <item>
      <title>UMDCTF 2024 - Donations Part2</title>
      <link>http://localhost:1313/posts/umdctf2024/d2/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/umdctf2024/d2/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;The second part of &amp;ldquo;Donations&amp;rdquo; also has a parameter pollution vulnerability, so the approach is to exploit this vulnerability in the request.&lt;/p&gt;&#xA;&lt;h2 id=&#34;approach&#34;&gt;Approach&lt;/h2&gt;&#xA;&lt;p&gt;The first step was the same as part 1 of the challenge, where I registered a user and intercepted the request of making donations to &amp;ldquo;Jeff Bezos&amp;rdquo;. I tried sending a negative amount, which the response returned an error message.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/web2_1.png&#34; alt=&#34;web1_1&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This was the key to finding the solution - the message told me that &amp;ldquo;only Amazon can steal your money&amp;rdquo;. So I had the idea of adding a &amp;ldquo;from&amp;rdquo; paramter to indicate the sender as &amp;ldquo;amazon&amp;rdquo;. Like part 1 of the challenge, I overrode the destination with an additional &amp;ldquo;to&amp;rdquo; directed to a user I created. As the image below shows, I was able to send &amp;ldquo;currency&amp;rdquo; from one user to another.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
